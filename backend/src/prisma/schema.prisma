datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
	id				            String          @id @default(uuid())
	intra_id		            Int	            @unique
	firstName		            String
	lastName		            String
	nickname		            String          @unique
	email			            String
	wallet			            Int
	points			            Int
	password		            String
	profilePic		            String
	coverPic		            String
	level			            Float
	grade			            String
	
	userFriends                 User[]              @relation("friends")
    friendOfUser                User[]              @relation("friends")

    rooms                   JoinedTable[]
    connectedUsers          ConnectedUsers[]
	matches					Match[]
	sentRequests			FriendRequest[] @relation("sender")
	receivedRequest			FriendRequest[] @relation("target")
}

model Room{

    id              String      @id @default(uuid())
    room_name       String      @unique    
    password        String?
    

    users                       JoinedTable[]
}
 
model ConnectedUsers {
    
    id              String     @id @default(uuid())
    socketId        String   
    
    user            User @relation(fields: [userId], references: [id])
    userId          String
 
}


model JoinedTable{  

    user                User       @relation(fields: [userId], references: [id])
    userId              String  

    room                Room        @relation(fields: [roomId], references: [id]) // not compile in the query
    roomId              String 
 
    socketId           String?

    @@id([userId, roomId])
}

model Match {
	id			String @id @default(uuid())
	players		User[]
	scores		Int[]
	playerAt	DateTime @default(now())
}

model FriendRequest {
	id			String @id @default(uuid())
	target		User @relation("target", fields: [targetId], references: [id])
	sender		User @relation("sender", fields: [senderId], references: [id])
	targetId	String
	senderId	String
}


